1.get和post
GET的语义是请求获取指定的资源。GET方法是安全、幂等、可缓存的（除非有 Cache-ControlHeader的约束）,GET方法的报文主体没有任何语义。
POST的语义是根据请求负荷（报文主体）对指定的资源做出处理，具体的处理方式视资源类型而不同。POST不安全，不幂等，（大部分实现）不可缓存。
为了针对其不可缓存性，有一系列的方法来进行优化，以后有机会再研究（FLAG已经立起）。
get传送的数据量小，get安全性低，post安全性相对较高。
get请求会被缓存，post不会被缓存。
post更安全（不会作为url的一部分，不会被缓存、保存在服务器日志、以及浏览器浏览记录中）
post能发送更多的数据类型（get只能发送ASCII字符）
post比get慢（post请求包含更多的请求头，如content-type）
post在真正接受数据之前会先将请求头发送给服务器进行确认，然后才真正发送数据
post请求的过程：
　　1.浏览器请求tcp连接（第一次握手）
　　2.服务器答应进行tcp连接（第二次握手）
　　3.浏览器确认，并发送post请求头（第三次握手，这个报文比较小，所以http会在此时进行第一次数据发送）
　　4.服务器返回100 continue响应
　　5.浏览器开始发送数据
　　6.服务器返回200 ok响应
get请求的过程
　   1.浏览器请求tcp连接（第一次握手）
　　2.服务器答应进行tcp连接（第二次握手）
　　3.浏览器确认，并发送get请求头和数据（第三次握手，这个报文比较小，所以http会在此时进行第一次数据发送）
　　4.服务器返回200 ok响应

2.幂等性定义
HTTP方法的幂等性是指一次和多次请求某一个资源应该具有同样的副作用。

3.tcp三次握手过程中第三次失败怎么办
三次握手：
第一次握手：建立连接时，客户端发送syn包(syn=j)到服务器
，并进入SYN_SEND状态，等待服务器确认；
第二次握手：服务器收到syn包，必须确认客户的SYN（ack=j+1），同时自己也发送一个SYN包（syn=k），即SYN+ACK包，此时服务器进入SYN_RECV状态；
第三次握手：客户端收到服务器的SYN＋ACK包，向服务器发送确认包ACK(ack=k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。

当客户端收到服务端的SYN+ACK应答后，其状态变为ESTABLISHED，并会发送ACK包给服务端，准备发送数据了。如果此时ACK在网络中丢失，
过了超时计时器后，那么Server端会重新发送SYN+ACK包，重传次数根据/proc/sys/net/ipv4/tcp_synack_retries来指定，默认是5次。
如果重传指定次数到了后，仍然未收到ACK应答，那么一段时间后，Server自动关闭这个连接。但是Client认为这个连接已经建立，如果
Client端向Server写数据，Server端将以RST包响应，方能感知到Server的错误。

4.https与http
https增加了一个套接字层作为自己的子层
HTTP 的 URL 以 http:// 开头，而 HTTPS 的 URL 以 https:// 开头
HTTP 是不安全的，而 HTTPS 是安全的
HTTP 标准端口是 80 ，而 HTTPS 的标准端口是 443
在 OSI 网络模型中，HTTP 工作于应用层，而 HTTPS 工作在传输层
HTTP 无需加密，而 HTTPS 对传输的数据进行加密
HTTP 无需证书，而 HTTPS 需要认证证书

HTTPS 一定是繁琐的.
a) 本来简单的http协议,一个get一个response. 由于https 要还密钥和确认加密算法的需要.单握手就需要6/7 个往返.
i. 任何应用中,过多的round trip 肯定影响性能.
b) 接下来才是具体的http协议,每一次响应或者请求, 都要求客户端和服务端对会话的内容做加密/解密.
i. 尽管对称加密/解密效率比较高,可是仍然要消耗过多的CPU,为此有专门的SSL 芯片. 如果CPU 信能比较低的话,肯定会降低性能,从而不能serve 更多的请求.
ii. 加密后数据量的影响. 所以，才会出现那么多的安全认证提示

网关工作在第四层传输层及其以上
物理层（网卡，网线，集线器，中继器，调制解调器），
数据链路层（网桥，交换机，将IP数据报封装成针），
网络层（路由器,IP,将传输层的报文或用户数据段封装成IP数据报），
传输层(tcp,udp)，会话层，表示层，应用层(http)


应用层,传输层,网络层,数据链路层,物理层

5.为什么建立连接是三次握手，断开连接是四次挥手？是基于什么性质？
tcp是全双工模式,接收到FIN时意味将没有数据再发来，但是还是可以继续发送数据。

6.RTMP（实时消息传输协议）
RTMP协议(Real Time Messaging Protocol)是被Flash用于对象,视频,音频的传输.这个协议建立在TCP协议或者轮询
HTTP协议之上.

7.各种变量，常量分别在哪个内存区域？

8.csrf,xss
CSRF:
1.验证HTTP Referer字段,在HTTP头中有一个字段叫Referer，它记录了该HTTP请求的来源地址。
2.在请求地址中添加token并验证
3.网站验证码
XSS：
对输入进行转换，不接受DOM式的非法输入

session.cache_limiter参数，军哥lnmp默认值是nocache，只要修改为none即可解决这个HTTP状态中的缓存问题。

